# SPDX-License-Identifier: BSD-3-Clause
# Copyright Contributors to the OpenColorIO Project.

[project]
name = "opencolorio-config-aces"
version = "2.4"
description = "OpenColorIO Configuration for ACES"
readme = "README.rst"
requires-python = ">=3.10,<3.14"
authors = [
    { name = "OpenColorIO Contributors", email = "ocio-dev@lists.aswf.io" },
]
maintainers = [
    { name = "OpenColorIO Contributors", email = "ocio-dev@lists.aswf.io" },
]
license = { text = "BSD-3-Clause" }
homepage = "https://www.colour-science.org/"
keywords = [
    "ACES",
    "OpenColorIO",
    "OCIO"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development"
]
dependencies = [
    "opencolorio",
    "requests>=2,<3",
    "semver>=3,<4",
]

# [tool.uv.sources]
# opencolorio = { index = "test-pypi" }

# [[tool.uv.index]]
# name = "test-pypi"
# url = "https://test.pypi.org/simple/"
# explicit = true

[project.optional-dependencies]
optional = [
    "colour-science>=0.4.3",
    "jsonpickle",
    "networkx",
    "pydot",
]
docs = [
    "pydata-sphinx-theme",
    "sphinx",
]

[project.urls]
Homepage = "https://opencolorio.org"
Documentation = "https://opencolorio.readthedocs.io"
Repository = "https://github.com/AcademySoftwareFoundation/OpenColorIO-Config-ACES"
Issues = "https://github.com/AcademySoftwareFoundation/OpenColorIO-Config-ACES/issues"
Changelog = "https://github.com/AcademySoftwareFoundation/OpenColorIO-Config-ACES/releases"

[tool.uv]
package = true
dev-dependencies = [
    "coverage",
    "coveralls",
    "hatch",
    "invoke",
    "pre-commit",
    "pyright",
    "pytest",
    "pytest-cov",
    "pytest-xdist",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = [ "opencolorio_config_aces" ]

[tool.flynt]
line_length = 999

[tool.isort]
ensure_newline_before_comments = true
force_grid_wrap = 0
include_trailing_comma = true
line_length = 88
multi_line_output = 3
skip = ["__init__.py"]
split_on_trailing_comma = true
use_parentheses = true

[tool.pyright]
reportMissingImports = false
reportMissingModuleSource = false
reportUnboundVariable = false
reportUnnecessaryCast = true
reportUnnecessaryTypeIgnoreComment = true
reportUnsupportedDunderAll = false
reportUnusedExpression = false
exclude = ["**/aces-dev"]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "A", # flake8-builtins
    "ARG", # flake8-unused-arguments
    # "ANN", # flake8-annotations
    "B", # flake8-bugbear
    # "BLE", # flake8-blind-except
    "C4", # flake8-comprehensions
    # "C90", # mccabe
    # "COM", # flake8-commas
    "DTZ", # flake8-datetimez
    "D", # pydocstyle
    "E", # pydocstyle
    # "ERA", # eradicate
    # "EM", # flake8-errmsg
    "EXE", # flake8-executable
    "F", # flake8
    # "FBT", # flake8-boolean-trap
    "G", # flake8-logging-format
    "I", # isort
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "ISC", # flake8-implicit-str-concat
    "N", # pep8-naming
    # "PD", # pandas-vet
    "PIE", # flake8-pie
    "PGH", # pygrep-hooks
    "PL", # pylint
    # "PT", # flake8-pytest-style
    # "PTH", # flake8-use-pathlib [Enable]
    "Q", # flake8-quotes
    "RET", # flake8-return
    "RUF", # Ruff
    "S", # flake8-bandit
    "SIM", # flake8-simplify
    "T10", # flake8-debugger
    "T20", # flake8-print
    # "TCH", # flake8-type-checking
    "TID", # flake8-tidy-imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pydocstyle
    "YTT", # flake8-2020
]
ignore = [
    "B008",
    "B905",
    "D104",
    "D200",
    "D202",
    "D205",
    "D301",
    "D400",
    "I001",
    "N801",
    "N802",
    "N803",
    "N806",
    "N813",
    "N815",
    "N816",
    "PGH003",
    "PIE804",
    "PLE0605",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PLR2004",
    "RET504",
    "RET505",
    "RET506",
    "RET507",
    "RET508",
    "TRY003",
    "TRY300",
    "UP038",
]
fixable = ["B", "C", "E", "F", "PIE", "RUF", "SIM", "UP", "W"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.ruff.per-file-ignores]
"docs/*" = ["INP"]
"tasks.py" = ["INP"]
"utilities/*" = ["EXE001", "INP"]
