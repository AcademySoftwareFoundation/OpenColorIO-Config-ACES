name: Continuous Integration

on: [push, pull_request]

jobs:
  continuous-integration:
    name: ${{ matrix.os }} - Python ${{ matrix.python-version }}
    strategy:
      matrix:
        os: [macOS-latest, ubuntu-18.04, windows-latest]
        python-version: [3.7, 3.8]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Environment Variables
      run: |
        echo "CI_PYTHON_VERSION=${{ matrix.python-version }}" >> $GITHUB_ENV
        echo "CI_PACKAGE=opencolorio_config_aces" >> $GITHUB_ENV
        echo "CI_SHA=${{ github.sha }}" >> $GITHUB_ENV
        echo "CI_FLAKE8_EXCLUDED=aces-dev" >> $GITHUB_ENV
        echo "COVERALLS_REPO_TOKEN=${{ secrets.COVERALLS_REPO_TOKEN }}" >> $GITHUB_ENV
      shell: bash
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Poetry
      run: |
        curl -L https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py -o get-poetry.py
        python get-poetry.py --version 1.0.10
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      shell: bash
    - name: Install Package Dependencies
      run: |
        poetry install --extras "graph"
      shell: bash
    - name: Lint with flake8
      run: |
        poetry run flake8 $CI_PACKAGE --count --show-source --statistics --exclude=$CI_FLAKE8_EXCLUDED
      shell: bash
    - name: Test with nosetests
      run: |
        poetry run python -W ignore -m nose -q -v --with-doctest --doctest-options=+ELLIPSIS --with-coverage --traverse-namespace --cover-package=$CI_PACKAGE $CI_PACKAGE
      shell: bash
#    - name: Upload Coverage to coveralls.io
#      run: |
#        if [ -z "$COVERALLS_REPO_TOKEN" ]; then echo \"COVERALLS_REPO_TOKEN\" secret is undefined!; else poetry run coveralls; fi
#      shell: bash

